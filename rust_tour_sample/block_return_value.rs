fn example() -> i32 {
  /*
    if、match、関数、ブロックは、単一の方法で値を返すことができます。
    
    if、match、関数、ブロックの最後が ; のない式であれば、戻り値として使用されます。 
    これは値を返すための簡潔なロジックを作成するのに最適な方法で、その値は新しい変数に入れることができます。

    また、if 文を三項演算子のように使用できる
  */

  let x = 42;
  // Rust の三項式
  let v = if x < 42 { -1 } else { 1 };
  println!("if より: {}", v);

  let food = "ハンバーガー";
  let result = match food {
      "ホットドッグ" => "ホットドッグです",
      // 単一の式で値を返す場合、中括弧は省略可能
      _ => "ホットドッグではありません",
  };
  println!("食品の識別: {}", result);

  let v = {
      // ブロックのスコープは関数のスコープから分離されている
      let a = 1;
      let b = 2;
      a + b
  };
  println!("ブロックより: {}", v);

  // Rust で関数の最後から値を返す慣用的な方法
  v + 4
}

fn main() {
  println!("関数より: {}", example());
}
